name: "Cvproject IAC"
on: 
  push: 
    branches:
      - main
      - iac 
    paths:
      - terraform/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/**

env:
# Credentials for deployment to AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
# S3 bucket for the Terraform state
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION: us-east-1

jobs: 
  terraform:
    name: "Apply terraform code changes"
    runs-on: ubuntu-latest  # Creates a container with Ubuntu image
    defaults: 
      run: 
        shell: bash 
        working-directory: ./terraform # cd in the directory

    steps:
      - name: Checkout source code # Action to check if the src code is already there.
        uses: actions/checkout@v4
 
      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        #with:
          # terraform_version: 2.0.2

      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

      - name: Terraform format
        id: fmt 
        run: terraform fmt -check # Checks if the terraform code is correctly formated
      
      - name: Terraform validate 
        id: validate
        run: terraform validate

      - name: Terraform plan 
        id: plan\
        run: terraform plan -no-color -input=false  -out planfile
        continue-on-error: true # Set to true since it is not reliable. Next step is for actual check

      - name: Terraform plan status
        if: steps.plan.outcome == 'failure' # if the outcome of plan is failure the container shell gets killed
        run: exit 1



      